/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BigNumber,
  BigNumberish,
  BytesLike,
  CallOverrides,
  ContractTransaction,
  Overrides,
  PayableOverrides,
  PopulatedTransaction,
  Signer,
  utils,
} from "ethers";
import type { FunctionFragment, Result } from "@ethersproject/abi";
import type { Listener, Provider } from "@ethersproject/providers";
import type {
  TypedEventFilter,
  TypedEvent,
  TypedListener,
  OnEvent,
  PromiseOrValue,
} from "./common";

export interface KatanaInterface extends utils.Interface {
  functions: {
    "WRON()": FunctionFragment;
    "addLiquidity(address,address,uint256,uint256,uint256,uint256,address,uint256)": FunctionFragment;
    "addLiquidityRON(address,uint256,uint256,uint256,address,uint256)": FunctionFragment;
    "factory()": FunctionFragment;
    "getAmountIn(uint256,uint256,uint256)": FunctionFragment;
    "getAmountOut(uint256,uint256,uint256)": FunctionFragment;
    "getAmountsIn(uint256,address[])": FunctionFragment;
    "getAmountsOut(uint256,address[])": FunctionFragment;
    "quote(uint256,uint256,uint256)": FunctionFragment;
    "removeLiquidity(address,address,uint256,uint256,uint256,address,uint256)": FunctionFragment;
    "removeLiquidityRON(address,uint256,uint256,uint256,address,uint256)": FunctionFragment;
    "removeLiquidityRONSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256)": FunctionFragment;
    "removeLiquidityRONWithPermit(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": FunctionFragment;
    "removeLiquidityRONWithPermitSupportingFeeOnTransferTokens(address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": FunctionFragment;
    "removeLiquidityWithPermit(address,address,uint256,uint256,uint256,address,uint256,bool,uint8,bytes32,bytes32)": FunctionFragment;
    "swapExactRONForTokens(uint256,address[],address,uint256)": FunctionFragment;
    "swapExactRONForTokensSupportingFeeOnTransferTokens(uint256,address[],address,uint256)": FunctionFragment;
    "swapExactTokensForRON(uint256,uint256,address[],address,uint256)": FunctionFragment;
    "swapExactTokensForRONSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": FunctionFragment;
    "swapExactTokensForTokens(uint256,uint256,address[],address,uint256)": FunctionFragment;
    "swapExactTokensForTokensSupportingFeeOnTransferTokens(uint256,uint256,address[],address,uint256)": FunctionFragment;
    "swapRONForExactTokens(uint256,address[],address,uint256)": FunctionFragment;
    "swapTokensForExactRON(uint256,uint256,address[],address,uint256)": FunctionFragment;
    "swapTokensForExactTokens(uint256,uint256,address[],address,uint256)": FunctionFragment;
  };

  getFunction(
    nameOrSignatureOrTopic:
      | "WRON"
      | "addLiquidity"
      | "addLiquidityRON"
      | "factory"
      | "getAmountIn"
      | "getAmountOut"
      | "getAmountsIn"
      | "getAmountsOut"
      | "quote"
      | "removeLiquidity"
      | "removeLiquidityRON"
      | "removeLiquidityRONSupportingFeeOnTransferTokens"
      | "removeLiquidityRONWithPermit"
      | "removeLiquidityRONWithPermitSupportingFeeOnTransferTokens"
      | "removeLiquidityWithPermit"
      | "swapExactRONForTokens"
      | "swapExactRONForTokensSupportingFeeOnTransferTokens"
      | "swapExactTokensForRON"
      | "swapExactTokensForRONSupportingFeeOnTransferTokens"
      | "swapExactTokensForTokens"
      | "swapExactTokensForTokensSupportingFeeOnTransferTokens"
      | "swapRONForExactTokens"
      | "swapTokensForExactRON"
      | "swapTokensForExactTokens"
  ): FunctionFragment;

  encodeFunctionData(functionFragment: "WRON", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "addLiquidity",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "addLiquidityRON",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(functionFragment: "factory", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "getAmountIn",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getAmountOut",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "getAmountsIn",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "getAmountsOut",
    values: [PromiseOrValue<BigNumberish>, PromiseOrValue<string>[]]
  ): string;
  encodeFunctionData(
    functionFragment: "quote",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "removeLiquidity",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "removeLiquidityRON",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "removeLiquidityRONSupportingFeeOnTransferTokens",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "removeLiquidityRONWithPermit",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<boolean>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "removeLiquidityRONWithPermitSupportingFeeOnTransferTokens",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<boolean>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "removeLiquidityWithPermit",
    values: [
      PromiseOrValue<string>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<boolean>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BytesLike>,
      PromiseOrValue<BytesLike>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "swapExactRONForTokens",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>[],
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "swapExactRONForTokensSupportingFeeOnTransferTokens",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>[],
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "swapExactTokensForRON",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>[],
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "swapExactTokensForRONSupportingFeeOnTransferTokens",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>[],
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "swapExactTokensForTokens",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>[],
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>[],
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "swapRONForExactTokens",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>[],
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "swapTokensForExactRON",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>[],
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;
  encodeFunctionData(
    functionFragment: "swapTokensForExactTokens",
    values: [
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<BigNumberish>,
      PromiseOrValue<string>[],
      PromiseOrValue<string>,
      PromiseOrValue<BigNumberish>
    ]
  ): string;

  decodeFunctionResult(functionFragment: "WRON", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "addLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "addLiquidityRON",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "factory", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getAmountIn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAmountOut",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAmountsIn",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "getAmountsOut",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "quote", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "removeLiquidity",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeLiquidityRON",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeLiquidityRONSupportingFeeOnTransferTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeLiquidityRONWithPermit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeLiquidityRONWithPermitSupportingFeeOnTransferTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeLiquidityWithPermit",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "swapExactRONForTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "swapExactRONForTokensSupportingFeeOnTransferTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "swapExactTokensForRON",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "swapExactTokensForRONSupportingFeeOnTransferTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "swapExactTokensForTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "swapExactTokensForTokensSupportingFeeOnTransferTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "swapRONForExactTokens",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "swapTokensForExactRON",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "swapTokensForExactTokens",
    data: BytesLike
  ): Result;

  events: {};
}

export interface Katana extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  interface: KatanaInterface;

  queryFilter<TEvent extends TypedEvent>(
    event: TypedEventFilter<TEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TEvent>>;

  listeners<TEvent extends TypedEvent>(
    eventFilter?: TypedEventFilter<TEvent>
  ): Array<TypedListener<TEvent>>;
  listeners(eventName?: string): Array<Listener>;
  removeAllListeners<TEvent extends TypedEvent>(
    eventFilter: TypedEventFilter<TEvent>
  ): this;
  removeAllListeners(eventName?: string): this;
  off: OnEvent<this>;
  on: OnEvent<this>;
  once: OnEvent<this>;
  removeListener: OnEvent<this>;

  functions: {
    WRON(overrides?: CallOverrides): Promise<[string]>;

    addLiquidity(
      _tokenA: PromiseOrValue<string>,
      _tokenB: PromiseOrValue<string>,
      _amountADesired: PromiseOrValue<BigNumberish>,
      _amountBDesired: PromiseOrValue<BigNumberish>,
      _amountAMin: PromiseOrValue<BigNumberish>,
      _amountBMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    addLiquidityRON(
      _token: PromiseOrValue<string>,
      _amountTokenDesired: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    factory(overrides?: CallOverrides): Promise<[string]>;

    getAmountIn(
      _amountOut: PromiseOrValue<BigNumberish>,
      _reserveIn: PromiseOrValue<BigNumberish>,
      _reserveOut: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _amountIn: BigNumber }>;

    getAmountOut(
      _amountIn: PromiseOrValue<BigNumberish>,
      _reserveIn: PromiseOrValue<BigNumberish>,
      _reserveOut: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _amountOut: BigNumber }>;

    getAmountsIn(
      _amountOut: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { _amounts: BigNumber[] }>;

    getAmountsOut(
      _amountIn: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<[BigNumber[]] & { _amounts: BigNumber[] }>;

    quote(
      _amountA: PromiseOrValue<BigNumberish>,
      _reserveA: PromiseOrValue<BigNumberish>,
      _reserveB: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<[BigNumber] & { _amountB: BigNumber }>;

    removeLiquidity(
      _tokenA: PromiseOrValue<string>,
      _tokenB: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountAMin: PromiseOrValue<BigNumberish>,
      _amountBMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    removeLiquidityRON(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    removeLiquidityRONSupportingFeeOnTransferTokens(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    removeLiquidityRONWithPermit(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      _approveMax: PromiseOrValue<boolean>,
      _v: PromiseOrValue<BigNumberish>,
      _r: PromiseOrValue<BytesLike>,
      _s: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    removeLiquidityRONWithPermitSupportingFeeOnTransferTokens(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      _approveMax: PromiseOrValue<boolean>,
      _v: PromiseOrValue<BigNumberish>,
      _r: PromiseOrValue<BytesLike>,
      _s: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    removeLiquidityWithPermit(
      _tokenA: PromiseOrValue<string>,
      _tokenB: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountAMin: PromiseOrValue<BigNumberish>,
      _amountBMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      _approveMax: PromiseOrValue<boolean>,
      _v: PromiseOrValue<BigNumberish>,
      _r: PromiseOrValue<BytesLike>,
      _s: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    swapExactRONForTokens(
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    swapExactRONForTokensSupportingFeeOnTransferTokens(
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    swapExactTokensForRON(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    swapExactTokensForRONSupportingFeeOnTransferTokens(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    swapExactTokensForTokens(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    swapExactTokensForTokensSupportingFeeOnTransferTokens(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    swapRONForExactTokens(
      _amountOut: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    swapTokensForExactRON(
      _amountOut: PromiseOrValue<BigNumberish>,
      _amountInMax: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;

    swapTokensForExactTokens(
      _amountOut: PromiseOrValue<BigNumberish>,
      _amountInMax: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<ContractTransaction>;
  };

  WRON(overrides?: CallOverrides): Promise<string>;

  addLiquidity(
    _tokenA: PromiseOrValue<string>,
    _tokenB: PromiseOrValue<string>,
    _amountADesired: PromiseOrValue<BigNumberish>,
    _amountBDesired: PromiseOrValue<BigNumberish>,
    _amountAMin: PromiseOrValue<BigNumberish>,
    _amountBMin: PromiseOrValue<BigNumberish>,
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  addLiquidityRON(
    _token: PromiseOrValue<string>,
    _amountTokenDesired: PromiseOrValue<BigNumberish>,
    _amountTokenMin: PromiseOrValue<BigNumberish>,
    _amountRONMin: PromiseOrValue<BigNumberish>,
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  factory(overrides?: CallOverrides): Promise<string>;

  getAmountIn(
    _amountOut: PromiseOrValue<BigNumberish>,
    _reserveIn: PromiseOrValue<BigNumberish>,
    _reserveOut: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAmountOut(
    _amountIn: PromiseOrValue<BigNumberish>,
    _reserveIn: PromiseOrValue<BigNumberish>,
    _reserveOut: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  getAmountsIn(
    _amountOut: PromiseOrValue<BigNumberish>,
    _path: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  getAmountsOut(
    _amountIn: PromiseOrValue<BigNumberish>,
    _path: PromiseOrValue<string>[],
    overrides?: CallOverrides
  ): Promise<BigNumber[]>;

  quote(
    _amountA: PromiseOrValue<BigNumberish>,
    _reserveA: PromiseOrValue<BigNumberish>,
    _reserveB: PromiseOrValue<BigNumberish>,
    overrides?: CallOverrides
  ): Promise<BigNumber>;

  removeLiquidity(
    _tokenA: PromiseOrValue<string>,
    _tokenB: PromiseOrValue<string>,
    _liquidity: PromiseOrValue<BigNumberish>,
    _amountAMin: PromiseOrValue<BigNumberish>,
    _amountBMin: PromiseOrValue<BigNumberish>,
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  removeLiquidityRON(
    _token: PromiseOrValue<string>,
    _liquidity: PromiseOrValue<BigNumberish>,
    _amountTokenMin: PromiseOrValue<BigNumberish>,
    _amountRONMin: PromiseOrValue<BigNumberish>,
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  removeLiquidityRONSupportingFeeOnTransferTokens(
    _token: PromiseOrValue<string>,
    _liquidity: PromiseOrValue<BigNumberish>,
    _amountTokenMin: PromiseOrValue<BigNumberish>,
    _amountRONMin: PromiseOrValue<BigNumberish>,
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  removeLiquidityRONWithPermit(
    _token: PromiseOrValue<string>,
    _liquidity: PromiseOrValue<BigNumberish>,
    _amountTokenMin: PromiseOrValue<BigNumberish>,
    _amountRONMin: PromiseOrValue<BigNumberish>,
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    _approveMax: PromiseOrValue<boolean>,
    _v: PromiseOrValue<BigNumberish>,
    _r: PromiseOrValue<BytesLike>,
    _s: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  removeLiquidityRONWithPermitSupportingFeeOnTransferTokens(
    _token: PromiseOrValue<string>,
    _liquidity: PromiseOrValue<BigNumberish>,
    _amountTokenMin: PromiseOrValue<BigNumberish>,
    _amountRONMin: PromiseOrValue<BigNumberish>,
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    _approveMax: PromiseOrValue<boolean>,
    _v: PromiseOrValue<BigNumberish>,
    _r: PromiseOrValue<BytesLike>,
    _s: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  removeLiquidityWithPermit(
    _tokenA: PromiseOrValue<string>,
    _tokenB: PromiseOrValue<string>,
    _liquidity: PromiseOrValue<BigNumberish>,
    _amountAMin: PromiseOrValue<BigNumberish>,
    _amountBMin: PromiseOrValue<BigNumberish>,
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    _approveMax: PromiseOrValue<boolean>,
    _v: PromiseOrValue<BigNumberish>,
    _r: PromiseOrValue<BytesLike>,
    _s: PromiseOrValue<BytesLike>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  swapExactRONForTokens(
    _amountOutMin: PromiseOrValue<BigNumberish>,
    _path: PromiseOrValue<string>[],
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  swapExactRONForTokensSupportingFeeOnTransferTokens(
    _amountOutMin: PromiseOrValue<BigNumberish>,
    _path: PromiseOrValue<string>[],
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  swapExactTokensForRON(
    _amountIn: PromiseOrValue<BigNumberish>,
    _amountOutMin: PromiseOrValue<BigNumberish>,
    _path: PromiseOrValue<string>[],
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  swapExactTokensForRONSupportingFeeOnTransferTokens(
    _amountIn: PromiseOrValue<BigNumberish>,
    _amountOutMin: PromiseOrValue<BigNumberish>,
    _path: PromiseOrValue<string>[],
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  swapExactTokensForTokens(
    _amountIn: PromiseOrValue<BigNumberish>,
    _amountOutMin: PromiseOrValue<BigNumberish>,
    _path: PromiseOrValue<string>[],
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  swapExactTokensForTokensSupportingFeeOnTransferTokens(
    _amountIn: PromiseOrValue<BigNumberish>,
    _amountOutMin: PromiseOrValue<BigNumberish>,
    _path: PromiseOrValue<string>[],
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  swapRONForExactTokens(
    _amountOut: PromiseOrValue<BigNumberish>,
    _path: PromiseOrValue<string>[],
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  swapTokensForExactRON(
    _amountOut: PromiseOrValue<BigNumberish>,
    _amountInMax: PromiseOrValue<BigNumberish>,
    _path: PromiseOrValue<string>[],
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  swapTokensForExactTokens(
    _amountOut: PromiseOrValue<BigNumberish>,
    _amountInMax: PromiseOrValue<BigNumberish>,
    _path: PromiseOrValue<string>[],
    _to: PromiseOrValue<string>,
    _deadline: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    WRON(overrides?: CallOverrides): Promise<string>;

    addLiquidity(
      _tokenA: PromiseOrValue<string>,
      _tokenB: PromiseOrValue<string>,
      _amountADesired: PromiseOrValue<BigNumberish>,
      _amountBDesired: PromiseOrValue<BigNumberish>,
      _amountAMin: PromiseOrValue<BigNumberish>,
      _amountBMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        _amountA: BigNumber;
        _amountB: BigNumber;
        _liquidity: BigNumber;
      }
    >;

    addLiquidityRON(
      _token: PromiseOrValue<string>,
      _amountTokenDesired: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber, BigNumber] & {
        _amountToken: BigNumber;
        _amountRON: BigNumber;
        _liquidity: BigNumber;
      }
    >;

    factory(overrides?: CallOverrides): Promise<string>;

    getAmountIn(
      _amountOut: PromiseOrValue<BigNumberish>,
      _reserveIn: PromiseOrValue<BigNumberish>,
      _reserveOut: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAmountOut(
      _amountIn: PromiseOrValue<BigNumberish>,
      _reserveIn: PromiseOrValue<BigNumberish>,
      _reserveOut: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAmountsIn(
      _amountOut: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    getAmountsOut(
      _amountIn: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    quote(
      _amountA: PromiseOrValue<BigNumberish>,
      _reserveA: PromiseOrValue<BigNumberish>,
      _reserveB: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeLiquidity(
      _tokenA: PromiseOrValue<string>,
      _tokenB: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountAMin: PromiseOrValue<BigNumberish>,
      _amountBMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { _amountA: BigNumber; _amountB: BigNumber }
    >;

    removeLiquidityRON(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        _amountToken: BigNumber;
        _amountRON: BigNumber;
      }
    >;

    removeLiquidityRONSupportingFeeOnTransferTokens(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeLiquidityRONWithPermit(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      _approveMax: PromiseOrValue<boolean>,
      _v: PromiseOrValue<BigNumberish>,
      _r: PromiseOrValue<BytesLike>,
      _s: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & {
        _amountToken: BigNumber;
        _amountRON: BigNumber;
      }
    >;

    removeLiquidityRONWithPermitSupportingFeeOnTransferTokens(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      _approveMax: PromiseOrValue<boolean>,
      _v: PromiseOrValue<BigNumberish>,
      _r: PromiseOrValue<BytesLike>,
      _s: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeLiquidityWithPermit(
      _tokenA: PromiseOrValue<string>,
      _tokenB: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountAMin: PromiseOrValue<BigNumberish>,
      _amountBMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      _approveMax: PromiseOrValue<boolean>,
      _v: PromiseOrValue<BigNumberish>,
      _r: PromiseOrValue<BytesLike>,
      _s: PromiseOrValue<BytesLike>,
      overrides?: CallOverrides
    ): Promise<
      [BigNumber, BigNumber] & { _amountA: BigNumber; _amountB: BigNumber }
    >;

    swapExactRONForTokens(
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    swapExactRONForTokensSupportingFeeOnTransferTokens(
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    swapExactTokensForRON(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    swapExactTokensForRONSupportingFeeOnTransferTokens(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    swapExactTokensForTokens(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    swapExactTokensForTokensSupportingFeeOnTransferTokens(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<void>;

    swapRONForExactTokens(
      _amountOut: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    swapTokensForExactRON(
      _amountOut: PromiseOrValue<BigNumberish>,
      _amountInMax: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;

    swapTokensForExactTokens(
      _amountOut: PromiseOrValue<BigNumberish>,
      _amountInMax: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber[]>;
  };

  filters: {};

  estimateGas: {
    WRON(overrides?: CallOverrides): Promise<BigNumber>;

    addLiquidity(
      _tokenA: PromiseOrValue<string>,
      _tokenB: PromiseOrValue<string>,
      _amountADesired: PromiseOrValue<BigNumberish>,
      _amountBDesired: PromiseOrValue<BigNumberish>,
      _amountAMin: PromiseOrValue<BigNumberish>,
      _amountBMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    addLiquidityRON(
      _token: PromiseOrValue<string>,
      _amountTokenDesired: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    factory(overrides?: CallOverrides): Promise<BigNumber>;

    getAmountIn(
      _amountOut: PromiseOrValue<BigNumberish>,
      _reserveIn: PromiseOrValue<BigNumberish>,
      _reserveOut: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAmountOut(
      _amountIn: PromiseOrValue<BigNumberish>,
      _reserveIn: PromiseOrValue<BigNumberish>,
      _reserveOut: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAmountsIn(
      _amountOut: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    getAmountsOut(
      _amountIn: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    quote(
      _amountA: PromiseOrValue<BigNumberish>,
      _reserveA: PromiseOrValue<BigNumberish>,
      _reserveB: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<BigNumber>;

    removeLiquidity(
      _tokenA: PromiseOrValue<string>,
      _tokenB: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountAMin: PromiseOrValue<BigNumberish>,
      _amountBMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    removeLiquidityRON(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    removeLiquidityRONSupportingFeeOnTransferTokens(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    removeLiquidityRONWithPermit(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      _approveMax: PromiseOrValue<boolean>,
      _v: PromiseOrValue<BigNumberish>,
      _r: PromiseOrValue<BytesLike>,
      _s: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    removeLiquidityRONWithPermitSupportingFeeOnTransferTokens(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      _approveMax: PromiseOrValue<boolean>,
      _v: PromiseOrValue<BigNumberish>,
      _r: PromiseOrValue<BytesLike>,
      _s: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    removeLiquidityWithPermit(
      _tokenA: PromiseOrValue<string>,
      _tokenB: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountAMin: PromiseOrValue<BigNumberish>,
      _amountBMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      _approveMax: PromiseOrValue<boolean>,
      _v: PromiseOrValue<BigNumberish>,
      _r: PromiseOrValue<BytesLike>,
      _s: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    swapExactRONForTokens(
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    swapExactRONForTokensSupportingFeeOnTransferTokens(
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    swapExactTokensForRON(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    swapExactTokensForRONSupportingFeeOnTransferTokens(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    swapExactTokensForTokens(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    swapExactTokensForTokensSupportingFeeOnTransferTokens(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    swapRONForExactTokens(
      _amountOut: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    swapTokensForExactRON(
      _amountOut: PromiseOrValue<BigNumberish>,
      _amountInMax: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;

    swapTokensForExactTokens(
      _amountOut: PromiseOrValue<BigNumberish>,
      _amountInMax: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    WRON(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    addLiquidity(
      _tokenA: PromiseOrValue<string>,
      _tokenB: PromiseOrValue<string>,
      _amountADesired: PromiseOrValue<BigNumberish>,
      _amountBDesired: PromiseOrValue<BigNumberish>,
      _amountAMin: PromiseOrValue<BigNumberish>,
      _amountBMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    addLiquidityRON(
      _token: PromiseOrValue<string>,
      _amountTokenDesired: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    factory(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getAmountIn(
      _amountOut: PromiseOrValue<BigNumberish>,
      _reserveIn: PromiseOrValue<BigNumberish>,
      _reserveOut: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAmountOut(
      _amountIn: PromiseOrValue<BigNumberish>,
      _reserveIn: PromiseOrValue<BigNumberish>,
      _reserveOut: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAmountsIn(
      _amountOut: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getAmountsOut(
      _amountIn: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    quote(
      _amountA: PromiseOrValue<BigNumberish>,
      _reserveA: PromiseOrValue<BigNumberish>,
      _reserveB: PromiseOrValue<BigNumberish>,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    removeLiquidity(
      _tokenA: PromiseOrValue<string>,
      _tokenB: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountAMin: PromiseOrValue<BigNumberish>,
      _amountBMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    removeLiquidityRON(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    removeLiquidityRONSupportingFeeOnTransferTokens(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    removeLiquidityRONWithPermit(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      _approveMax: PromiseOrValue<boolean>,
      _v: PromiseOrValue<BigNumberish>,
      _r: PromiseOrValue<BytesLike>,
      _s: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    removeLiquidityRONWithPermitSupportingFeeOnTransferTokens(
      _token: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountTokenMin: PromiseOrValue<BigNumberish>,
      _amountRONMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      _approveMax: PromiseOrValue<boolean>,
      _v: PromiseOrValue<BigNumberish>,
      _r: PromiseOrValue<BytesLike>,
      _s: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    removeLiquidityWithPermit(
      _tokenA: PromiseOrValue<string>,
      _tokenB: PromiseOrValue<string>,
      _liquidity: PromiseOrValue<BigNumberish>,
      _amountAMin: PromiseOrValue<BigNumberish>,
      _amountBMin: PromiseOrValue<BigNumberish>,
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      _approveMax: PromiseOrValue<boolean>,
      _v: PromiseOrValue<BigNumberish>,
      _r: PromiseOrValue<BytesLike>,
      _s: PromiseOrValue<BytesLike>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    swapExactRONForTokens(
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    swapExactRONForTokensSupportingFeeOnTransferTokens(
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    swapExactTokensForRON(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    swapExactTokensForRONSupportingFeeOnTransferTokens(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    swapExactTokensForTokens(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    swapExactTokensForTokensSupportingFeeOnTransferTokens(
      _amountIn: PromiseOrValue<BigNumberish>,
      _amountOutMin: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    swapRONForExactTokens(
      _amountOut: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: PayableOverrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    swapTokensForExactRON(
      _amountOut: PromiseOrValue<BigNumberish>,
      _amountInMax: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;

    swapTokensForExactTokens(
      _amountOut: PromiseOrValue<BigNumberish>,
      _amountInMax: PromiseOrValue<BigNumberish>,
      _path: PromiseOrValue<string>[],
      _to: PromiseOrValue<string>,
      _deadline: PromiseOrValue<BigNumberish>,
      overrides?: Overrides & { from?: PromiseOrValue<string> }
    ): Promise<PopulatedTransaction>;
  };
}
